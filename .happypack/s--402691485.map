{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/index.js"],"names":["editorActions","Editor","props","loadLocal","localStorage","getItem","onChange","result","textarea","value","setItem","editMarkdown","mockSave","e","ctrlKey","metaKey","keyCode","preventDefault","toggleSaveFile","componentWillMount","_initHighLight","componentDidMount","textValue","hlScript","document","createElement","type","src","getElementsByTagName","appendChild","onload","window","hljs","initHighlightingOnLoad","console","log","render","isPreview","isSaving","savedFile","isBrowsing","loadLocalFiles","togglePreview","toggleBrowse","saveNewFile","markdownCls","markdown","previewCls","browseCls","node","__html","propTypes","string","func","bool","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  makeSelectTextValue,\n  makeSelectIsPreview,\n  makeSelectIsSaving,\n  makeSelectIsBrowsing,\n  makeSelectSavedFiles\n} from \"./selector\";\nimport * as editorActions from \"./action\";\nimport debounce from \"lodash/debounce\";\nimport marked from \"marked\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Wrapper from \"./Wrapper\";\nimport AutoSizeTextarea from \"./Textarea\";\nimport EditorPanel from \"./EditorPanel\";\nimport Preview from \"material-ui/svg-icons/action/visibility\";\nimport Save from \"material-ui/svg-icons/content/archive\";\nimport SaveFileModal from \"./SaveFileModal\";\nimport BrowseFileModal from \"./browseFileModal\";\nimport BrowseFile from \"./BrowseFile\";\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.onChange = debounce(this.onChange, 500);\n  }\n\n  componentWillMount() {\n    this._initHighLight();\n  }\n\n  componentDidMount() {\n    this.textarea.value = this.loadLocal()\n      ? this.loadLocal()\n      : this.props.textValue;\n    // Forced synchronization between state&LocalStorage\n    this.props.editMarkdown(this.textarea.value);\n  }\n\n  _initHighLight() {\n    const hlScript = document.createElement(\"script\");\n    hlScript.type = \"text/javascript\";\n    hlScript.src =\n      \"//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.7/highlight.min.js\";\n    document.getElementsByTagName(\"head\")[0].appendChild(hlScript);\n    hlScript.onload = function() {\n      window.hljs.initHighlightingOnLoad();\n      console.log(\n        \"%c HilghtJS initiaized\",\n        \"color: #8bc34a; font-weight: bold;\"\n      );\n    };\n  }\n\n  loadLocal = () => {\n    return localStorage.getItem(\"currentText\");\n  };\n\n  onChange = () => {\n    const result = this.textarea.value;\n    localStorage.setItem(\"currentText\", result);\n    this.props.editMarkdown(result);\n  };\n\n  mockSave = e => {\n    if ((e.ctrlKey || e.metaKey) && e.keyCode === 83) {\n      e.preventDefault();\n      this.props.toggleSaveFile();\n    }\n  };\n\n  render() {\n    const {\n      isPreview,\n      isSaving,\n      savedFile,\n      textValue,\n      isBrowsing,\n      editMarkdown,\n      toggleSaveFile,\n      loadLocalFiles,\n      togglePreview,\n      toggleBrowse,\n      saveNewFile\n    } = this.props;\n\n    const markdownCls = classNames({\n      \"hidden-toggle\": isPreview || isBrowsing,\n      markdown: true\n    });\n\n    const previewCls = classNames({\n      \"hidden-toggle\": !isPreview,\n      markdown: true\n    });\n\n    const browseCls = classNames({\n      \"hidden-toggle\": !isBrowsing\n    });\n\n    return (\n      <Wrapper>\n        {/* Markdown -Editor */}\n        <AutoSizeTextarea\n          className={markdownCls}\n          inputRef={node => (this.textarea = node)}\n          onChange={this.onChange}\n          onKeyDown={this.mockSave}\n        />\n        {/* Preview -Overlay*/}\n        <div\n          className={previewCls}\n          dangerouslySetInnerHTML={{\n            __html: marked(textValue)\n          }}\n        />\n        <div />\n        {/* Editor tools panel - Aside */}\n        <EditorPanel\n          togglePreview={togglePreview}\n          toggleSaveFile={toggleSaveFile}\n          toggleBrowse={toggleBrowse}\n          isBrowsing={isBrowsing}\n          isPreview={isPreview}\n          isSaving={isSaving}\n        />\n        {/* Modal: enter filename */}\n        <SaveFileModal\n          isSaving={isSaving}\n          onSave={saveNewFile}\n          onCancel={toggleSaveFile}\n          textValue={textValue}\n        />\n        <BrowseFileModal\n          isBrowsing={isBrowsing}\n          toggleBrowse={toggleBrowse}\n          loadLocalFiles={loadLocalFiles}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nEditor.propTypes = {\n  textValue: PropTypes.string,\n  togglePreview: PropTypes.func,\n  isPreview: PropTypes.bool,\n  isSaving: PropTypes.bool,\n  isBrowsing: PropTypes.bool,\n  editMarkdown: PropTypes.func,\n  toggleSaveFile: PropTypes.func,\n  loadLocalFiles: PropTypes.func,\n  toggleBrowse: PropTypes.func,\n  saveNewFile: PropTypes.func,\n  savedFile: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  textValue: makeSelectTextValue(state),\n  isPreview: makeSelectIsPreview(state),\n  isSaving: makeSelectIsSaving(state),\n  isBrowsing: makeSelectIsBrowsing(state),\n  savedFile: makeSelectSavedFiles(state)\n});\n\nexport default connect(mapStateToProps, editorActions)(Editor);\n"]}