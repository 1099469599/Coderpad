{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/BrowseFile.js"],"names":["BrowseFile","props","localSavedFiles","componentDidMount","syncLocal","key","localStorage","indexOf","item","getItem","JSON","parse","console","log","render","isBrowsing","browseCls","propTypes","bool","mapStateToProps","state"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAEjB,UAAKC,eAAL,GAAuB,EAAvB;AAFiB;AAGlB;;uBAEDC,iB,gCAAoB;AAClB,SAAKC,SAAL;AACD,G;;uBAEDA,S,wBAAY;AACV,SAAK,IAAIC,GAAT,IAAgBC,YAAhB,EAA8B;AAC5B,UAAID,IAAIE,OAAJ,CAAY,UAAZ,IAA0B,CAAC,CAA/B,EAAkC;AAChC,YAAIC,OAAOF,aAAaG,OAAb,CAAqBJ,GAArB,CAAX;AACA,aAAKH,eAAL,CAAqBG,GAArB,IAA4BK,KAAKC,KAAL,CAAWH,IAAX,CAA5B;AACD;AACF;AACDI,YAAQC,GAAR,CAAY,KAAKX,eAAjB;AACD,G;;uBAEDY,M,qBAAS;AAAA,QACCC,UADD,GACgB,KAAKd,KADrB,CACCc,UADD;;AAEP,QAAMC,YAAY,0BAAW;AAC3B,uBAAiB,CAACD;AADS,KAAX,CAAlB;AAGA,WACE;AAAA;AAAA,QAAK,WAAWC,SAAhB;AAAA;AAAA,KADF;AAKD,G;;;;;AAGHhB,WAAWiB,SAAX,GAAuB;AACrBF,cAAY,oBAAUG;AADD,CAAvB;AAGA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCJ,gBAAY,oCAAqBK,KAArB;AADoB,GAAV;AAAA,CAAxB;;kBAIe,yBAAQD,eAAR,EAAyBnB,UAAzB,C","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { makeSelectIsBrowsing } from \"./selector\";\n\nclass BrowseFile extends Component {\n  constructor(props) {\n    super(props);\n    this.localSavedFiles = {};\n  }\n\n  componentDidMount() {\n    this.syncLocal();\n  }\n\n  syncLocal() {\n    for (let key in localStorage) {\n      if (key.indexOf(\"coderPad\") > -1) {\n        let item = localStorage.getItem(key);\n        this.localSavedFiles[key] = JSON.parse(item);\n      }\n    }\n    console.log(this.localSavedFiles);\n  }\n\n  render() {\n    const { isBrowsing } = this.props;\n    const browseCls = classNames({\n      \"hidden-toggle\": !isBrowsing\n    });\n    return (\n      <div className={browseCls}>\n        test\n      </div>\n    );\n  }\n}\n\nBrowseFile.propTypes = {\n  isBrowsing: PropTypes.bool\n};\nconst mapStateToProps = state => ({\n  isBrowsing: makeSelectIsBrowsing(state)\n});\n\nexport default connect(mapStateToProps)(BrowseFile);\n"]}