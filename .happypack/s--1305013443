/* REACT HOT LOADER */ if (module.hot) { (function () { var ReactHotAPI = require("/Users/Kylewh/Desktop/playground/projects/coderPad/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/Kylewh/Desktop/playground/projects/coderPad/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

"use strict";

exports.__esModule = true;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require("react-redux");

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _immutable = require("immutable");

var _immutable2 = _interopRequireDefault(_immutable);

var _selector = require("./selector");

var _action = require("./action");

var _fileItem = require("./fileItem");

var _fileItem2 = _interopRequireDefault(_fileItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BrowseFile = function (_Component) {
  _inherits(BrowseFile, _Component);

  function BrowseFile(props) {
    _classCallCheck(this, BrowseFile);

    return _possibleConstructorReturn(this, _Component.call(this, props));
  }

  BrowseFile.prototype.componentWillMount = function componentWillMount() {
    this.props.loadLocalFiles();
  };

  BrowseFile.prototype.render = function render() {
    var isBrowsing = this.props.isBrowsing;

    var browseCls = (0, _classnames2.default)({
      "hidden-toggle": !isBrowsing
    });
    var oSavedFiles = this.props.savedFiles.toJS();
    return _react2.default.createElement(
      "div",
      { className: browseCls },
      _react2.default.createElement(
        "ul",
        null,
        Object.keys(oSavedFiles).map(function (item) {
          return _react2.default.createElement(_fileItem2.default, {
            key: oSavedFiles[item],
            fileName: item.substr(9),
            content: oSavedFiles[item]
          });
        })
      )
    );
  };

  return BrowseFile;
}(_react.Component);

BrowseFile.propTypes = {
  savedFiles: _propTypes2.default.object,
  isBrowsing: _propTypes2.default.bool,
  loadLocalFiles: _propTypes2.default.func
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    isBrowsing: (0, _selector.makeSelectIsBrowsing)(state),
    savedFiles: (0, _selector.makeSelectSavedFiles)(state)
  };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps, { loadLocalFiles: _action.loadLocalFiles })(BrowseFile);

/* REACT HOT LOADER */ }).call(this); } finally { if (module.hot) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/Kylewh/Desktop/playground/projects/coderPad/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "BrowseFile.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }