{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/browseFileModal.js"],"names":["UL","ul","BrowseFileModal","props","mockSubmit","e","keyCode","handleSave","renderFileList","Object","keys","oSavedFiles","map","item","substr","savedFiles","toJS","componentWillMount","loadLocalFiles","render","isBrowsing","toggleBrowse","actions","handleClose","width","display","justifyContent","fontWeight","length","mapStateToProps","makeSelectIsBrowsing","state","makeSelectSavedFiles","propTypes","bool","func","object"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,2BAAOC,EAAZ,iBAAN;;IAIMC,e;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAAA,UASnBC,UATmB,GASN,aAAK;AAChBC,QAAEC,OAAF,KAAc,EAAd,IAAoB,MAAKC,UAAL,EAApB;AACD,KAXkB;;AAAA,UAanBC,cAbmB,GAaF,YAAM;AACrB,aAAOC,OAAOC,IAAP,CAAY,MAAKC,WAAjB,EAA8BC,GAA9B,CAAkC;AAAA,eACvC;AACE,eAAK,MAAKD,WAAL,CAAiBE,IAAjB,CADP;AAEE,oBAAUA,KAAKC,MAAL,CAAY,CAAZ,CAFZ;AAGE,mBAAS,MAAKH,WAAL,CAAiBE,IAAjB;AAHX,UADuC;AAAA,OAAlC,CAAP;AAMI,KApBa;;AAEjB,UAAKF,WAAL,GAAmB,MAAKR,KAAL,CAAWY,UAAX,CAAsBC,IAAtB,EAAnB;AAFiB;AAGlB;;4BAEDC,kB,iCAAqB;AACnB,SAAKd,KAAL,CAAWe,cAAX;AACD,G;;4BAeDC,M,qBAAS;AAAA,iBAC0C,KAAKhB,KAD/C;AAAA,QACCiB,UADD,UACCA,UADD;AAAA,QACaC,YADb,UACaA,YADb;AAAA,QAC2BN,UAD3B,UAC2BA,UAD3B;;AAEP,QAAMO,UAAU,CACd;AACE,aAAM,IADR;AAEE,eAAS,IAFX;AAGE,uBAAiB,IAHnB;AAIE,kBAAYD;AAJd,MADc,CAAhB;AAQA,WACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,iBAAM,WADR;AAEE,mBAASC,OAFX;AAGE,iBAAO,KAHT;AAIE,gBAAMF,UAJR;AAKE,iCAAuB,IALzB;AAME,0BAAgB,KAAKG,WANvB;AAOE,wBAAc;AACZC,mBAAO;AADK,WAPhB;AAUE,qBAAW;AACTC,qBAAS,MADA;AAETC,4BAAgB;AAFP,WAVb;AAcE,sBAAY;AACVC,wBAAY;AADF;AAdd;AAkBE;AAAC,YAAD;AAAA;AAEIlB,iBAAOC,IAAP,CAAY,KAAKC,WAAjB,EAA8BiB;AAFlC;AAlBF;AADF,KADF;AA4BD,G;;;;;AAGH,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCT,gBAAYU,qBAAqBC,KAArB,CADoB;AAEhChB,gBAAYiB,qBAAqBD,KAArB;AAFoB,GAAV;AAAA,CAAxB;;AAKA7B,gBAAgB+B,SAAhB,GAA4B;AAC1Bb,cAAY,oBAAUc,IADI;AAE1Bb,gBAAc,oBAAUc,IAFE;AAG1BpB,cAAY,oBAAUqB,MAHI;AAI1BlB,kBAAgB,oBAAUiB;AAJA,CAA5B;;kBAOe,2BAAUjC,eAAV,C","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport Immutable from \"immutable\";\nimport FileItem from \"./fileItem\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport DatePicker from \"material-ui/DatePicker\";\n\nconst UL = styled.ul`\n  width: 100%;\n`;\n\nclass BrowseFileModal extends Component {\n  constructor(props) {\n    super(props);\n    this.oSavedFiles = this.props.savedFiles.toJS();\n  }\n\n  componentWillMount() {\n    this.props.loadLocalFiles();\n  }\n\n  mockSubmit = e => {\n    e.keyCode === 13 && this.handleSave();\n  };\n\n  renderFileList = () => {\n    return Object.keys(this.oSavedFiles).map(item => (\n      <FileItem\n        key={this.oSavedFiles[item]}\n        fileName={item.substr(9)}\n        content={this.oSavedFiles[item]}\n      />\n    ));}\n\n  render() {\n    const { isBrowsing, toggleBrowse, savedFiles } = this.props;\n    const actions = [\n      <FlatButton\n        label=\"OK\"\n        primary={true}\n        keyboardFocused={true}\n        onTouchTap={toggleBrowse}\n      />\n    ];\n    return (\n      <div>\n        <Dialog\n          title=\"File List\"\n          actions={actions}\n          modal={false}\n          open={isBrowsing}\n          autoScrollBodyContent={true}\n          onRequestClose={this.handleClose}\n          contentStyle={{\n            width: \"50vw\"\n          }}\n          bodyStyle={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n          titleStyle={{\n            fontWeight: \"300\"\n          }}\n        >\n          <UL>\n            {\n              Object.keys(this.oSavedFiles).length\n            }\n          </UL>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isBrowsing: makeSelectIsBrowsing(state),\n  savedFiles: makeSelectSavedFiles(state)\n});\n\nBrowseFileModal.propTypes = {\n  isBrowsing: PropTypes.bool,\n  toggleBrowse: PropTypes.func,\n  savedFiles: PropTypes.object,\n  loadLocalFiles: PropTypes.func\n};\n\nexport default connect()(BrowseFileModal);\n"]}