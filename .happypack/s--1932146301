/* REACT HOT LOADER */ if (module.hot) { (function () { var ReactHotAPI = require("/Users/Kylewh/Desktop/playground/projects/coderPad/node_modules/react-hot-api/modules/index.js"), RootInstanceProvider = require("/Users/Kylewh/Desktop/playground/projects/coderPad/node_modules/react-hot-loader/RootInstanceProvider.js"), ReactMount = require("react-dom/lib/ReactMount"), React = require("react"); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {

"use strict";

exports.__esModule = true;
exports.loadLocalFiles = exports.saveNewFile = exports.toggleSaveFile = exports.editMarkdown = exports.togglePreview = exports.toggleBrowse = undefined;

var _constant = require("../App/constant");

var actionTypes = _interopRequireWildcard(_constant);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var togglePreview = function togglePreview() {
  return {
    type: actionTypes.TOGGLE_PREVIEW
  };
};

var editMarkdown = function editMarkdown(value) {
  return {
    type: actionTypes.EDIT_MARKDOWN,
    payload: value
  };
};

var toggleSaveFile = function toggleSaveFile() {
  return {
    type: actionTypes.TOGGLE_SAVEFILE
  };
};

var toggleBrowse = function toggleBrowse() {
  return {
    type: actionTypes.TOGGLE_BROWSE
  };
};

var saveNewFile = function saveNewFile(name, textValue) {
  var finalName = "coderPad-" + name;
  localStorage.setItem(finalName, textValue);
  return {
    type: actionTypes.SAVE_NEWFILE,
    name: finalName,
    textValue: textValue
  };
};

var loadLocalFiles = function loadLocalFiles() {
  var localSavedFiles = {};
  for (var name in localStorage) {
    if (name.indexOf("coderPad") > -1) {
      localSavedFiles[name] = localStorage.getItem(name);
    }
  }
  return {
    type: actionTypes.LOAD_LOCALFILES,
    payload: localSavedFiles
  };
};

exports.toggleBrowse = toggleBrowse;
exports.togglePreview = togglePreview;
exports.editMarkdown = editMarkdown;
exports.toggleSaveFile = toggleSaveFile;
exports.saveNewFile = saveNewFile;
exports.loadLocalFiles = loadLocalFiles;

/* REACT HOT LOADER */ }).call(this); } finally { if (module.hot) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = require("/Users/Kylewh/Desktop/playground/projects/coderPad/node_modules/react-hot-loader/makeExportsHot.js"); if (makeExportsHot(module, require("react"))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot apply hot update to " + "action.js" + ": " + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }