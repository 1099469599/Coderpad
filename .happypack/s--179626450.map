{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/action.js"],"names":["actionTypes","togglePreview","type","TOGGLE_PREVIEW","editMarkdown","EDIT_MARKDOWN","payload","value","toggleSaveFile","TOGGLE_SAVEFILE","toggleBrowse","TOGGLE_BROWSE","saveNewFile","name","textValue","finalName","localStorage","setItem","SAVE_NEWFILE","loadLocalFiles","localSavedFiles","indexOf","getItem","LOAD_LOCALFILES"],"mappings":";;;;;;;AAAA;;IAAYA,W;;;;AAEZ,IAAMC,gBAAgB,SAAhBA,aAAgB;AAAA,SAAO;AAC3BC,UAAMF,YAAYG;AADS,GAAP;AAAA,CAAtB;;AAIA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAAU;AAC7BF,UAAMF,YAAYK,aADW;AAE7BC,aAASC;AAFoB,GAAV;AAAA,CAArB;;AAKA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,SAAO;AAC5BN,UAAMF,YAAYS;AADU,GAAP;AAAA,CAAvB;;AAIA,IAAMC,eAAe,SAAfA,YAAe;AAAA,SAAO;AAC1BR,UAAMF,YAAYW;AADQ,GAAP;AAAA,CAArB;;AAIA,IAAMC,cAAc,SAAdA,WAAc,CAACC,IAAD,EAAOC,SAAP,EAAqB;AACvC,MAAIC,YAAY,cAAcF,IAA9B;AACAG,eAAaC,OAAb,CAAqBF,SAArB,EAAgCD,SAAhC;AACA,SAAO;AACLZ,UAAMF,YAAYkB,YADb;AAELL,UAAME,SAFD;AAGLD,eAAWA;AAHN,GAAP;AAKD,CARD;;AAUA,IAAMK,iBAAiB,SAAjBA,cAAiB,GAAM;AAC3B,MAAIC,kBAAkB,EAAtB;AACA,OAAK,IAAIP,IAAT,IAAiBG,YAAjB,EAA+B;AAC7B,QAAIH,KAAKQ,OAAL,CAAa,UAAb,IAA2B,CAAC,CAAhC,EAAmC;AACjCD,sBAAgBP,IAAhB,IAAwBG,aAAaM,OAAb,CAAqBT,IAArB,CAAxB;AACD;AACF;AACD,SAAO;AACLX,UAAMF,YAAYuB,eADb;AAELjB,aAASc;AAFJ,GAAP;AAID,CAXD;;QAcEV,Y,GAAAA,Y;QACAT,a,GAAAA,a;QACAG,Y,GAAAA,Y;QACAI,c,GAAAA,c;QACAI,W,GAAAA,W;QACAO,c,GAAAA,c","sourcesContent":["import * as actionTypes from \"../App/constant\";\n\nconst togglePreview = () => ({\n  type: actionTypes.TOGGLE_PREVIEW\n});\n\nconst editMarkdown = value => ({\n  type: actionTypes.EDIT_MARKDOWN,\n  payload: value\n});\n\nconst toggleSaveFile = () => ({\n  type: actionTypes.TOGGLE_SAVEFILE\n});\n\nconst toggleBrowse = () => ({\n  type: actionTypes.TOGGLE_BROWSE\n});\n\nconst saveNewFile = (name, textValue) => {\n  let finalName = \"coderPad-\" + name;\n  localStorage.setItem(finalName, textValue);\n  return {\n    type: actionTypes.SAVE_NEWFILE,\n    name: finalName,\n    textValue: textValue\n  };\n};\n\nconst loadLocalFiles = () => {\n  let localSavedFiles = {};\n  for (let name in localStorage) {\n    if (name.indexOf(\"coderPad\") > -1) {\n      localSavedFiles[name] = localStorage.getItem(name);\n    }\n  }\n  return {\n    type: actionTypes.LOAD_LOCALFILES,\n    payload: localSavedFiles\n  };\n};\n\nexport {\n  toggleBrowse,\n  togglePreview,\n  editMarkdown,\n  toggleSaveFile,\n  saveNewFile,\n  loadLocalFiles\n};\n"]}