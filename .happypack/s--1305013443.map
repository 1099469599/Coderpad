{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/BrowseFile.js"],"names":["BrowseFile","props","componentWillMount","loadLocalFiles","render","isBrowsing","browseCls","oSavedFiles","savedFiles","toJS","Object","keys","map","item","substr","propTypes","object","bool","func","mapStateToProps","state"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;;;;;;;;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4CACjB,sBAAMA,KAAN,CADiB;AAElB;;uBAEDC,kB,iCAAqB;AACnB,SAAKD,KAAL,CAAWE,cAAX;AACD,G;;uBAEDC,M,qBAAS;AAAA,QACCC,UADD,GACgB,KAAKJ,KADrB,CACCI,UADD;;AAEP,QAAMC,YAAY,0BAAW;AAC3B,uBAAiB,CAACD;AADS,KAAX,CAAlB;AAGA,QAAME,cAAc,KAAKN,KAAL,CAAWO,UAAX,CAAsBC,IAAtB,EAApB;AACA,WACE;AAAA;AAAA,QAAK,WAAWH,SAAhB;AACE;AAAA;AAAA;AACGI,eAAOC,IAAP,CAAYJ,WAAZ,EAAyBK,GAAzB,CAA6B;AAAA,iBAC5B;AACE,iBAAKL,YAAYM,IAAZ,CADP;AAEE,sBAAUA,KAAKC,MAAL,CAAY,CAAZ,CAFZ;AAGE,qBAASP,YAAYM,IAAZ;AAHX,YAD4B;AAAA,SAA7B;AADH;AADF,KADF;AAaD,G;;;;;AAGHb,WAAWe,SAAX,GAAuB;AACrBP,cAAY,oBAAUQ,MADD;AAErBX,cAAY,oBAAUY,IAFD;AAGrBd,kBAAgB,oBAAUe;AAHL,CAAvB;;AAMA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCd,gBAAY,oCAAqBe,KAArB,CADoB;AAEhCZ,gBAAY,oCAAqBY,KAArB;AAFoB,GAAV;AAAA,CAAxB;;kBAKe,yBAAQD,eAAR,EAAyB,EAAEhB,sCAAF,EAAzB,EAA6CH,UAA7C,C","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Immutable from \"immutable\";\nimport { makeSelectIsBrowsing, makeSelectSavedFiles } from \"./selector\";\nimport { loadLocalFiles } from \"./action\";\nimport FileItem from \"./fileItem\";\n\nclass BrowseFile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.loadLocalFiles();\n  }\n\n  render() {\n    const { isBrowsing } = this.props;\n    const browseCls = classNames({\n      \"hidden-toggle\": !isBrowsing\n    });\n    const oSavedFiles = this.props.savedFiles.toJS();\n    return (\n      <div className={browseCls}>\n        <ul>\n          {Object.keys(oSavedFiles).map(item => (\n            <FileItem\n              key={oSavedFiles[item]}\n              fileName={item.substr(9)}\n              content={oSavedFiles[item]}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nBrowseFile.propTypes = {\n  savedFiles: PropTypes.object,\n  isBrowsing: PropTypes.bool,\n  loadLocalFiles: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  isBrowsing: makeSelectIsBrowsing(state),\n  savedFiles: makeSelectSavedFiles(state)\n});\n\nexport default connect(mapStateToProps, { loadLocalFiles })(BrowseFile);\n"]}