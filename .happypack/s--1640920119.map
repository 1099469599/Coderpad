{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/BrowseFile.js"],"names":["BrowseFile","props","syncLocal","name","localStorage","indexOf","item","getItem","localSavedFiles","loadLocalFiles","componentDidMount","render","isBrowsing","browseCls","console","log","propTypes","bool","func","mapStateToProps","state"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAAA,UASnBC,SATmB,GASP,YAAM;AAChB,WAAK,IAAIC,IAAT,IAAiBC,YAAjB,EAA+B;AAC7B,YAAID,KAAKE,OAAL,CAAa,UAAb,IAA2B,CAAC,CAAhC,EAAmC;AACjC,cAAIC,OAAOF,aAAaG,OAAb,CAAqBJ,IAArB,CAAX;AACA,gBAAKK,eAAL,CAAqBL,IAArB,IAA6BG,IAA7B;AACD;AACF;AACD,YAAKL,KAAL,CAAWQ,cAAX,CAA0B,MAAKD,eAA/B;AACD,KAjBkB;;AAEjB,UAAKA,eAAL,GAAuB,EAAvB;AAFiB;AAGlB;;uBAEDE,iB,gCAAoB;AAClB,SAAKR,SAAL;AACD,G;;uBAYDS,M,qBAAS;AAAA,QACCC,UADD,GACgB,KAAKX,KADrB,CACCW,UADD;;AAEP,QAAMC,YAAY,0BAAW;AAC3B,uBAAiB,CAACD;AADS,KAAX,CAAlB;AAGAE,YAAQC,GAAR;AACA,WAAO,uCAAK,WAAWF,SAAhB,GAAP;AACD,G;;;;;AAGHb,WAAWgB,SAAX,GAAuB;AACrBJ,cAAY,oBAAUK,IADD;AAErBR,kBAAgB,oBAAUS;AAFL,CAAvB;AAIA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCP,gBAAY,oCAAqBQ,KAArB;AADoB,GAAV;AAAA,CAAxB;;kBAIe,yBAAQD,eAAR,EAAyB,EAAEV,sCAAF,EAAzB,EAA6CT,UAA7C,C","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { makeSelectIsBrowsing } from \"./selector\";\nimport { loadLocalFiles } from \"./action\";\n\nclass BrowseFile extends Component {\n  constructor(props) {\n    super(props);\n    this.localSavedFiles = {};\n  }\n\n  componentDidMount() {\n    this.syncLocal();\n  }\n\n  syncLocal = () => {\n    for (let name in localStorage) {\n      if (name.indexOf(\"coderPad\") > -1) {\n        let item = localStorage.getItem(name);\n        this.localSavedFiles[name] = item;\n      }\n    }\n    this.props.loadLocalFiles(this.localSavedFiles);\n  };\n\n  render() {\n    const { isBrowsing } = this.props;\n    const browseCls = classNames({\n      \"hidden-toggle\": !isBrowsing\n    });\n    console.log();\n    return <div className={browseCls} />;\n  }\n}\n\nBrowseFile.propTypes = {\n  isBrowsing: PropTypes.bool,\n  loadLocalFiles: PropTypes.func\n};\nconst mapStateToProps = state => ({\n  isBrowsing: makeSelectIsBrowsing(state)\n});\n\nexport default connect(mapStateToProps, { loadLocalFiles })(BrowseFile);\n"]}