{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/browseFileModal.js"],"names":["UL","ul","BrowseFileModal","props","mockSubmit","e","keyCode","handleSave","saveTextAsFile","text","filename","textFileAsBlob","Blob","type","downloadLink","document","createElement","download","innerHTML","window","webkitURL","href","createObjectURL","URL","onclick","destroyClickedElement","style","display","body","appendChild","click","componentWillMount","loadLocalFiles","event","removeChild","target","render","isBrowsing","toggleBrowse","savedFiles","oSavedFiles","toJS","actions","handleClose","width","justifyContent","fontWeight","Object","keys","map","item","substr","mapStateToProps","makeSelectIsBrowsing","state","makeSelectSavedFiles","propTypes","bool","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport Immutable from \"immutable\";\nimport FileItem from \"./fileItem\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport DatePicker from \"material-ui/DatePicker\";\n\nconst UL = styled.ul`\n  width: 100%;\n`;\n\nclass BrowseFileModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.loadLocalFiles();\n  }\n\n  mockSubmit = e => {\n    e.keyCode === 13 && this.handleSave();\n  };\n\n  destroyClickedElement(event) {\n    document.body.removeChild(event.target);\n  }\n\n  saveTextAsFile = (text, filename) => {\n    var textFileAsBlob = new Blob([text], { type: \"text/plain\" });\n\n    var downloadLink = document.createElement(\"a\");\n    downloadLink.download = filename;\n    downloadLink.innerHTML = \"Download File\";\n    if (window.webkitURL != null) {\n      // Chrome allows the link to be clicked\n      // without actually adding it to the DOM.\n      downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n    } else {\n      // Firefox requires the link to be added to the DOM\n      // before it can be clicked.\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n      downloadLink.onclick = this.destroyClickedElement;\n      downloadLink.style.display = \"none\";\n      document.body.appendChild(downloadLink);\n    }\n    downloadLink.click();\n  };\n\n  download\n\n  render() {\n    const { isBrowsing, toggleBrowse, savedFiles } = this.props;\n    const oSavedFiles = savedFiles.toJS();\n    const actions = [\n      <FlatButton\n        label=\"OK\"\n        primary={true}\n        keyboardFocused={true}\n        onTouchTap={toggleBrowse}\n      />\n    ];\n    return (\n      <div>\n        <Dialog\n          title=\"Files List\"\n          actions={actions}\n          modal={false}\n          open={isBrowsing}\n          autoScrollBodyContent={true}\n          onRequestClose={this.handleClose}\n          contentStyle={{\n            width: \"50vw\"\n          }}\n          bodyStyle={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n          titleStyle={{\n            fontWeight: \"300\"\n          }}\n        >\n          <UL>\n            {Object.keys(oSavedFiles).map(item => (\n              <FileItem\n                key={oSavedFiles[item]}\n                fileName={item.substr(9)}\n                content={oSavedFiles[item]}\n              />\n            ))}\n          </UL>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isBrowsing: makeSelectIsBrowsing(state),\n  savedFiles: makeSelectSavedFiles(state)\n});\n\nBrowseFileModal.propTypes = {\n  isBrowsing: PropTypes.bool,\n  toggleBrowse: PropTypes.func,\n  savedFiles: PropTypes.object,\n  loadLocalFiles: PropTypes.func\n};\n\nexport default connect()(BrowseFileModal);\n"]}