{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/browseFileModal.js"],"names":["UL","ul","BrowseFileModal","props","mockSubmit","e","keyCode","handleSave","renderFileList","Object","keys","oSavedFiles","map","item","substr","componentWillMount","loadLocalFiles","render","isBrowsing","toggleBrowse","savedFiles","toJS","actions","handleClose","width","display","justifyContent","fontWeight","mapStateToProps","makeSelectIsBrowsing","state","makeSelectSavedFiles","propTypes","bool","func","object"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,2BAAOC,EAAZ,iBAAN;;IAIMC,e;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAAA,UAQnBC,UARmB,GAQN,aAAK;AAChBC,QAAEC,OAAF,KAAc,EAAd,IAAoB,MAAKC,UAAL,EAApB;AACD,KAVkB;;AAAA,UAYnBC,cAZmB,GAYF,YAAM;AACrB,aAAOC,OAAOC,IAAP,CAAYC,WAAZ,EAAyBC,GAAzB,CAA6B;AAAA,eAClC;AACE,eAAKD,YAAYE,IAAZ,CADP;AAEE,oBAAUA,KAAKC,MAAL,CAAY,CAAZ,CAFZ;AAGE,mBAASH,YAAYE,IAAZ;AAHX,UADkC;AAAA,OAA7B,CAAP;AAMI,KAnBa;;AAAA;AAElB;;4BAEDE,kB,iCAAqB;AACnB,SAAKZ,KAAL,CAAWa,cAAX;AACD,G;;4BAeDC,M,qBAAS;AAAA,iBAC0C,KAAKd,KAD/C;AAAA,QACCe,UADD,UACCA,UADD;AAAA,QACaC,YADb,UACaA,YADb;AAAA,QAC2BC,UAD3B,UAC2BA,UAD3B;;AAEP,QAAMT,cAAcS,WAAWC,IAAX,EAApB;AACA,QAAMC,UAAU,CACd;AACE,aAAM,IADR;AAEE,eAAS,IAFX;AAGE,uBAAiB,IAHnB;AAIE,kBAAYH;AAJd,MADc,CAAhB;AAQA,WACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE,iBAAM,WADR;AAEE,mBAASG,OAFX;AAGE,iBAAO,KAHT;AAIE,gBAAMJ,UAJR;AAKE,iCAAuB,IALzB;AAME,0BAAgB,KAAKK,WANvB;AAOE,wBAAc;AACZC,mBAAO;AADK,WAPhB;AAUE,qBAAW;AACTC,qBAAS,MADA;AAETC,4BAAgB;AAFP,WAVb;AAcE,sBAAY;AACVC,wBAAY;AADF;AAdd;AAkBE,sCAAC,EAAD;AAlBF;AADF,KADF;AAwBD,G;;;;;AAGH,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCV,gBAAYW,qBAAqBC,KAArB,CADoB;AAEhCV,gBAAYW,qBAAqBD,KAArB;AAFoB,GAAV;AAAA,CAAxB;;AAKA5B,gBAAgB8B,SAAhB,GAA4B;AAC1Bd,cAAY,oBAAUe,IADI;AAE1Bd,gBAAc,oBAAUe,IAFE;AAG1Bd,cAAY,oBAAUe,MAHI;AAI1BnB,kBAAgB,oBAAUkB;AAJA,CAA5B;;kBAOe,2BAAUhC,eAAV,C","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport classNames from \"classnames\";\nimport Immutable from \"immutable\";\nimport FileItem from \"./fileItem\";\nimport PropTypes from \"prop-types\";\nimport Dialog from \"material-ui/Dialog\";\nimport FlatButton from \"material-ui/FlatButton\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport DatePicker from \"material-ui/DatePicker\";\n\nconst UL = styled.ul`\n  width: 100%;\n`;\n\nclass BrowseFileModal extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.loadLocalFiles();\n  }\n\n  mockSubmit = e => {\n    e.keyCode === 13 && this.handleSave();\n  };\n\n  renderFileList = () => {\n    return Object.keys(oSavedFiles).map(item => (\n      <FileItem\n        key={oSavedFiles[item]}\n        fileName={item.substr(9)}\n        content={oSavedFiles[item]}\n      />\n    ));}\n\n  render() {\n    const { isBrowsing, toggleBrowse, savedFiles } = this.props;\n    const oSavedFiles = savedFiles.toJS();\n    const actions = [\n      <FlatButton\n        label=\"OK\"\n        primary={true}\n        keyboardFocused={true}\n        onTouchTap={toggleBrowse}\n      />\n    ];\n    return (\n      <div>\n        <Dialog\n          title=\"File List\"\n          actions={actions}\n          modal={false}\n          open={isBrowsing}\n          autoScrollBodyContent={true}\n          onRequestClose={this.handleClose}\n          contentStyle={{\n            width: \"50vw\"\n          }}\n          bodyStyle={{\n            display: \"flex\",\n            justifyContent: \"center\"\n          }}\n          titleStyle={{\n            fontWeight: \"300\"\n          }}\n        >\n          <UL />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isBrowsing: makeSelectIsBrowsing(state),\n  savedFiles: makeSelectSavedFiles(state)\n});\n\nBrowseFileModal.propTypes = {\n  isBrowsing: PropTypes.bool,\n  toggleBrowse: PropTypes.func,\n  savedFiles: PropTypes.object,\n  loadLocalFiles: PropTypes.func\n};\n\nexport default connect()(BrowseFileModal);\n"]}