{"version":3,"sources":["/Users/Kylewh/Desktop/playground/projects/coderPad/src/containers/Editor/BrowseFile.js"],"names":["BrowseFile","props","localSavedFiles","componentDidMount","loadLocalFiles","render","isBrowsing","browseCls","Object","keys","savedFiles","map","console","log","item","name","propTypes","object","bool","func","mapStateToProps","state"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEMA,U;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,iDACjB,sBAAMA,KAAN,CADiB;;AAEjB,UAAKC,eAAL,GAAuB,EAAvB;AAFiB;AAGlB;;uBAEDC,iB,gCAAoB;AAClB,SAAKF,KAAL,CAAWG,cAAX;AACD,G;;uBAEDC,M,qBAAS;AAAA,QACCC,UADD,GACgB,KAAKL,KADrB,CACCK,UADD;;AAEP,QAAMC,YAAY,0BAAW;AAC3B,uBAAiB,CAACD;AADS,KAAX,CAAlB;;AAIA,WACE;AAAA;AAAA,QAAK,WAAWC,SAAhB;AACGC,aAAOC,IAAP,CAAY,KAAKR,KAAL,CAAWS,UAAvB,EAAmCC,GAAnC,CAAuC,gBAAQ;AAC9CC,gBAAQC,GAAR,CAAYC,KAAKC,IAAjB;AACA,eAAO;AAAA;AAAA,YAAI,KAAKD,KAAKC,IAAd;AAAqBD,eAAKC;AAA1B,SAAP;AACD,OAHA;AADH,KADF;AAQD,G;;;;;AAGHf,WAAWgB,SAAX,GAAuB;AACrBN,cAAY,oBAAUO,MADD;AAErBX,cAAY,oBAAUY,IAFD;AAGrBd,kBAAgB,oBAAUe;AAHL,CAAvB;AAKA,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCd,gBAAY,oCAAqBe,KAArB,CADoB;AAEhCX,gBAAY,oCAAqBW,KAArB;AAFoB,GAAV;AAAA,CAAxB;;kBAKe,yBAAQD,eAAR,EAAyB,EAAEhB,sCAAF,EAAzB,EAA6CJ,UAA7C,C","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport Immutable from \"immutable\";\nimport { makeSelectIsBrowsing, makeSelectSavedFiles } from \"./selector\";\nimport { loadLocalFiles } from \"./action\";\n\nclass BrowseFile extends Component {\n  constructor(props) {\n    super(props);\n    this.localSavedFiles = {};\n  }\n\n  componentDidMount() {\n    this.props.loadLocalFiles();\n  }\n\n  render() {\n    const { isBrowsing } = this.props;\n    const browseCls = classNames({\n      \"hidden-toggle\": !isBrowsing\n    });\n\n    return (\n      <div className={browseCls}>\n        {Object.keys(this.props.savedFiles).map(item => {\n          console.log(item.name);\n          return <li key={item.name}>{item.name}</li>;\n        })}\n      </div>\n    );\n  }\n}\n\nBrowseFile.propTypes = {\n  savedFiles: PropTypes.object,\n  isBrowsing: PropTypes.bool,\n  loadLocalFiles: PropTypes.func\n};\nconst mapStateToProps = state => ({\n  isBrowsing: makeSelectIsBrowsing(state),\n  savedFiles: makeSelectSavedFiles(state)\n});\n\nexport default connect(mapStateToProps, { loadLocalFiles })(BrowseFile);\n"]}